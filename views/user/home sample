//user order list ejs rendering 

<tbody>
    <% cart.forEach(function(item) { %>
        <tr>
            <td><img src="<%= item.product.image %>" alt="<%= item.product.name %>" class="img-fluid" style="width: 50px; height: 50px;"></td>
            <td><%= item.product.name %></td>
            <td><%= item.quantity %></td>
            <td>$<%= item.product.price.toFixed(2) %></td>
            <td>$<%= (item.product.price * item.quantity).toFixed(2) %></td>
            <td>
                <a href="/cart/remove/<%= item.product._id %>" class="btn btn-danger btn-sm">Remove</a>
            </td>
        </tr>
    <% }); %>
</tbody>


// errorpage sample
<!-- views/error.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Error</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="alert alert-danger">
            <h1>Error <%= status %></h1>
            <p><%= message %></p>
        </div>
        <a href="/" class="btn btn-primary">Go Home</a>
    </div>
</body>
</html>

// render the page containing all the products 
const categoryPage = async (req, res) => {
    try {
        const category = await categoryModel.find();
        const brands = await brandModel.find();
        const products = await product.find();

        // Send a 200 OK status code if everything is successful
        res.status(200).render('user/categoryPage', { category, brands, products });
    } catch (error) {
        console.log('loading category page by user:', error.message);

        // Render a custom error page with a 500 status code
        res.status(500).render('error', { status: 500, message: 'Internal Server Error' });
    }
};

